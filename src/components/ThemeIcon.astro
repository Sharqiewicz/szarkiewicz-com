<button id='themeToggle' class='relative'>
  <svg width='30px' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'>
    <path
      class='sun'
      fill-rule='evenodd'
      d='M12 17.5a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zm0 1.5a7 7 0 1 0 0-14 7 7 0 0 0 0 14zm12-7a.8.8 0 0 1-.8.8h-2.4a.8.8 0 0 1 0-1.6h2.4a.8.8 0 0 1 .8.8zM4 12a.8.8 0 0 1-.8.8H.8a.8.8 0 0 1 0-1.6h2.5a.8.8 0 0 1 .8.8zm16.5-8.5a.8.8 0 0 1 0 1l-1.8 1.8a.8.8 0 0 1-1-1l1.7-1.8a.8.8 0 0 1 1 0zM6.3 17.7a.8.8 0 0 1 0 1l-1.7 1.8a.8.8 0 1 1-1-1l1.7-1.8a.8.8 0 0 1 1 0zM12 0a.8.8 0 0 1 .8.8v2.5a.8.8 0 0 1-1.6 0V.8A.8.8 0 0 1 12 0zm0 20a.8.8 0 0 1 .8.8v2.4a.8.8 0 0 1-1.6 0v-2.4a.8.8 0 0 1 .8-.8zM3.5 3.5a.8.8 0 0 1 1 0l1.8 1.8a.8.8 0 1 1-1 1L3.5 4.6a.8.8 0 0 1 0-1zm14.2 14.2a.8.8 0 0 1 1 0l1.8 1.7a.8.8 0 0 1-1 1l-1.8-1.7a.8.8 0 0 1 0-1z'
    ></path>
    <path
      class='moon'
      fill-rule='evenodd'
      d='M16.5 6A10.5 10.5 0 0 1 4.7 16.4 8.5 8.5 0 1 0 16.4 4.7l.1 1.3zm-1.7-2a9 9 0 0 1 .2 2 9 9 0 0 1-11 8.8 9.4 9.4 0 0 1-.8-.3c-.4 0-.8.3-.7.7a10 10 0 0 0 .3.8 10 10 0 0 0 9.2 6 10 10 0 0 0 4-19.2 9.7 9.7 0 0 0-.9-.3c-.3-.1-.7.3-.6.7a9 9 0 0 1 .3.8z'
    ></path>
  </svg>
  <svg
    class='absolute -left-3 -top-3 circle'
    width='55px'
    height='55px'
    viewBox='0 0 32 32'
    version='1.1'
    xmlns='http://www.w3.org/2000/svg'
  >
    <path
      d='M20.215 1.861c-0.063-0.019-0.136-0.030-0.212-0.030-0.414 0-0.75 0.336-0.75 0.75 0 0.336 0.222 0.621 0.527 0.716l0.005 0.001c5.518 1.683 9.464 6.729 9.464 12.697 0 7.318-5.932 13.25-13.25 13.25s-13.25-5.932-13.25-13.25c0-5.968 3.945-11.014 9.37-12.672l0.094-0.025c0.314-0.094 0.539-0.381 0.539-0.72 0-0.414-0.336-0.75-0.75-0.75-0.078 0-0.152 0.012-0.223 0.034l0.005-0.001c-6.145 1.873-10.539 7.492-10.539 14.137 0 8.147 6.604 14.751 14.751 14.751s14.751-6.604 14.751-14.75v-0c-0.028-6.635-4.407-12.24-10.43-14.111l-0.105-0.028z'
    ></path>
  </svg>
</button>

<style>
  #themeToggle {
    border: 0;
    background: none;

    &:hover .sun {
      transition: 0.5s;
      fill: #ffd705;
    }
  }
  :global(.dark) #themeToggle {
    &:hover .moon {
      transition: 0.5s;
      fill: #ffd705;
    }

    &:hover .sun {
      fill: transparent;
    }
  }
  .sun {
    fill: black;
  }
  .moon {
    fill: transparent;
  }

  :global(.dark) .sun {
    fill: transparent;
  }
  :global(.dark) .moon {
    fill: white;
  }

  .circle {
    transition: 0.5s;
    fill: #2a2a48;
    @apply animate-spin;
    animation-duration: 15s;

    &:hover {
      fill: #ffd705;
    }
  }

  :global(.dark) .circle {
    transition: 0.5s;
    fill: white;
    &:hover {
      fill: #ffd705;
    }
  }

  .animate-welcome {
    animation: animate-welcome 0.5s ease-in-out forwards;

    fill: black;
    &:hover {
      fill: #ffd705;
    }
  }

  :global(.dark) .animate-welcome,
  :global(.dark) .animate-goodbye {
    fill: white;
  }

  .animate-goodbye {
    animation: animate-goodbye 0.5s ease-in-out forwards;
    fill: black;
    &:hover {
      fill: #ffd705;
    }
  }

  @keyframes animate-welcome {
    0% {
      transform: translateY(-100%);
      opacity: 0;
    }
    100% {
      transform: translateY(0%);
      opacity: 1;
    }
  }

  @keyframes animate-goodbye {
    0% {
      transform: translateY(0%);
      opacity: 1;
    }
    100% {
      transform: translateY(100%);
      opacity: 0;
    }
  }

  .hide-on-load {
    opacity: 0;
  }
</style>

<script is:inline>
  function animateToLight() {
    animateDayNight(
      document.querySelector('.sun'),
      document.querySelector('.moon'),
    )
  }

  function animateToDark() {
    animateDayNight(
      document.querySelector('.moon'),
      document.querySelector('.sun'),
    )
  }

  function animateDayNight(first, second) {
    const themeToggle = document.getElementById('themeToggle')
    themeToggle.disabled = true
    first.classList.remove('animate-welcome')
    first.classList.remove('animate-goodbye')
    first.classList.add('animate-goodbye')
    setTimeout(() => {
      second.classList.remove('animate-welcome')
      second.classList.remove('animate-goodbye')
      first.classList.remove('animate-welcome')
      second.classList.add('animate-welcome')
      themeToggle.disabled = false
    }, 300)
  }

  const theme = (() => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme')
    }
    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
      return 'dark'
    }
    return 'light'
  })()

  if (theme === 'light') {
    document.documentElement.classList.remove('dark')
    document.querySelector('.moon').classList.add('hide-on-load')
  } else {
    document.documentElement.classList.add('dark')
    document.querySelector('.sun').classList.add('hide-on-load')
  }

  window.localStorage.setItem('theme', theme)

  // Gestion du clic sur le bouton
  const handleToggleClick = () => {
    const element = document.documentElement
    element.classList.toggle('dark')

    const isDark = element.classList.contains('dark')
    localStorage.setItem('theme', isDark ? 'dark' : 'light')
    isDark ? animateToLight() : animateToDark()
  }

  document
    .getElementById('themeToggle')
    .addEventListener('click', handleToggleClick)
</script>
